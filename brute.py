# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Mon Jul 25 17:26:56 2022
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))